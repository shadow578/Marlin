#
# Marlin Firmware
# PlatformIO Configuration File
#

#################################
#
# HC32F46x Architecture with unified HC32 HAL 
# 
# Naming Example: HC32F460JEUA
#
# HC 32 F 4 6 0 J E U A
# |  |  | | | | | | | |- Temperature range (A: -40-85°C, B: -40-105°C)
# |  |  | | | | | | |- Package (T: LQFP, U: QFN, H:VFBGA)
# |  |  | | | | | |- Flash Capacity (C: 256KB, E: 512KB)
# |  |  | | | | |- Pin Count (J: 48, K: 60/64, P: 100)
# |  |  | | | |- Configuration (0: Configuration 1)
# |  |  | | |- Performance (6: High Performance)
# |  |  | |- Core Type (4: Cortex-M4)
# |  |  |- Product Type (F: Universal MCU)
# |  |- CPU bit width (32: 32-bit)
# |- Xiaohua Semiconductor
#
#################################

#
# Common Environment for all HC32F46x variants
#
[common_HC32_variant]
platform = https://github.com/shadow578/platform-hc32f46x.git
board = generic_hc32f460
build_flags = 
	-D TARGET_HC32F46x 							# marlin target
	-D REDIRECT_PRINTF_TO_SERIAL 				# redirect core-provided printf to host serial
	-D __DEBUG									# DDL debug mode
	-D __CORE_DEBUG								# core debug mode
	-D ENABLE_MICROS							# enable support for micros(), switch systick to 1us (instead of 1ms)
	-D DISABLE_SERIAL_GLOBALS					# disable global Serial objects, we use our own
	-D F_CPU=(SYSTEM_CLOCK_FREQUENCIES.pclk1)	# override F_CPU to PCLK1, as marlin freaks out otherwise...
	-D PLATFORM_M997_SUPPORT					# enable M997 command
	-D CORE_DISABLE_FAULT_HANDLER				# disable core fault handler (we use our own)
	-D PANIC_USART_BAUDRATE=115200				# set panic serial baudrate to 115200 (should be equal to host serial baudrate)
												# options to reduce debug mode footprint (-16K; messages are less verbose)
	-D __DEBUG_SHORT_FILENAMES					# use short filenames in DDL debug output 
	-D __CORE_DEBUG_SHORT_FILENAMES				# use short filenames in core debug output
	-D __CORE_DEBUG_OMIT_PANIC_MESSAGE			# omit panic messages in core debug output

build_src_filter = ${common.default_src_filter} +<src/HAL/HC32F46x> +<src/HAL/shared/backtrace>

# Drivers and Middleware required by the HC32F46x HAL
board_build.ddl.ots = true
board_build.ddl.sdioc = true
board_build.ddl.wdt = true
board_build.ddl.timer0 = true
board_build.ddl.timera = true
board_build.mw.sd_card = true

# additional, more aggressive optimization flags
board_build.flags.cpp =
	-fno-threadsafe-statics		# disable thread-safe statics (only one core anyway)
	-fno-exceptions				# disable exceptions (not used by marlin)
	-fno-rtti					# disable RTTI (not used by marlin)


#
# HC32F460xCxx (256K Flash)
#
[common_HC32F460xCxx_variant]
extends = common_HC32_variant
board_build.ld_args.flash_size = 256K

#
# HC32F460xExx (512K Flash)
#
[common_HC32F460xExx_variant]
extends = common_HC32_variant
board_build.ld_args.flash_size = 512K

#
# Voxelab Aquila V1.0.1 Mainboard, as found in the Voxelab Aquila X2
#
[env:HC32F460xCxx_AQUILA_V101]
extends = common_HC32F460xCxx_variant
# bootloader start address, as logged by the bootloader on boot
board_build.ld_args.flash_start = 0xC000

# print panic messages to Serial2 (host serial)
build_flags = 
	${common_HC32F460xCxx_variant.build_flags}	# extend common flags
	-D PANIC_USART2_TX_PIN=PA9					# write panic messages to PA9 (TX of host serial) using USART2
